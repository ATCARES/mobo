{

    "properties": {
        "id": {
            "description": "Usually auto generated id, consisting of the filename",
            "format": null,
            "internal": true
        },
        "$schema": {
            "internal": true
        },
        "title": {
            "description": "Human readable title of the field"
        },
        "description": {
            "description": "Description of the field. Can be displayed as tooltip info"
        },
        "format": {
            "description": "Describe the semantic format, how to interpret the type. E.g. 'email' or SMW specific datatypes like 'Temperature'",
            "enum": [
                "date",
                "date-time",
                "url",
                "email",
                "tel",
                "Page", "page",
                "Code", "code",
                "geographic coordinate", "Geographic coordinate",
                "Quantity", "quantity",
                "Record", "record",
                "Temperature", "temperature"
            ]
        },
        "properties": {
            "description": "Mobo Schema does not use 'properties', it prefers 'items' because the order of the element can be garantueed. Internally, properties are still used because of their easier accessing.",
            "internal": true
        },

        "$meta": {
            "type": "object",
            "description": "Internal metadata",
            "internal": true
        },
        "$extend": {
            "type": ["string", "array"],
            "description": "This references another mobo json file. It will be included through inheritance, all existing attributes in the parent object will be overwritten.",
            "pattern": "^\/.*\/_*.*$",
            "uniqueItems": true
        },
        "$remove": {
            "type": "array",
            "description": "Array, containing all properties to remove from the current object",
            "minItems": 1,
            "uniqueItems": true
        },
        "$reference": {
            "type": "object",
            "description": "For internal use only! After inheritance is applied, $extend will be replaced through reference. (For keeping info on the heritage)",
            "minItems": 1,
            "uniqueItems": true,
            "internal": true
        },
        "$path": {
            "type": "string",
            "description": "For internal use only! This stores the path of the object, as used in '$extend' or 'format'. Used for improved debugging messages",
            "internal": true
        },
        "$filepath": {
            "type": "string",
            "description": "For internal use only! This stores the complete relative path of the .json file. Used for improved debugging messages",
            "internal": true
        },
        "$modelPart": {
            "type": "string",
            "description": "For internal use only! This declares the part from the model where the object originated (field, form,...)",
            "internal": true
        },
        "wikitext": {
            "type": "string",
            "description": "For internal use only! This contains wikitext to inject",
            "internal": true
        },
        "$ignore": {
            "type": "boolean",
            "description": "If true this file will be ignored.",
            "default": false
        },
        "$abstract": {
            "type": "boolean",
            "default": false,
            "description": "If true this object is only used for inheritance and will not be created itself."
        },
        "itemsOrder": {
            "type": "array",
            "items": {
                "type": "string"
            },
            "description": "Array that sets the display order of all (including inherited) properties. Unmentioned fields will be appended at the bottom in their original order.",
            "minItems": 1,
            "uniqueItems": true
        },
        "todo": {
            "type": "string",
            "description": "If todo notes are placed here, mobo can output them (this is a setting)"
        },
        "note": {
            "type": ["string", "object"],
            "description": "Notes can be strings or objects and their content will be ignored"
        }
    },

    "additionalProperties": false
}
